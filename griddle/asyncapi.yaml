# Copyright 2017 Intel Corporation
# Copyright 2019 Bitwise IO, Inc.
# Copyright 2020-2021 Cargill Incorporated
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

asyncapi: 2.0.0
info:
  title: Grid Integration Component
  version: 0.0.0
  description: |
    WebSocket event interface for the GRID Integration Component
channels:
  receipts:
    subscribe:
      message:
        $ref: "#/components/messages/Receipt"
  state-change:
    subscribe:
      message:
        $ref: "#/components/messages/StateChange"
components:
  messages:
    Receipt:
      payload:
        type: object
        properties:
          event_type:
            type: string
            example: transaction_receipt
          event_data:
            $ref: "#/components/schemas/Receipt"
    StateChange:
      payload:
        type: object
        properties:
          event_type:
            type: string
            example: state_change
          event_data:
            $ref: "#/components/schemas/StateChange"
    BatchStatus:
      payload:
        type: object
        event_type:
          type: string
          example: state_change
        event_data:
          $ref: "#/components/schemas/BatchStatus"
  schemas:
    Agent:
      properties:
        org_id:
          type: string
          description: Organization ID
          example: cgl
        public_key:
          type: string
          description: Agent public key
          example: 02ced6707de14209d5493b7e021606d76dd759637207818205895bb63c94c6a352
        active:
          type: boolean
          description: Is the agent active
        roles:
          type: array
          items:
            type: string
            example: "can_update_schema"
    BatchStatus:
      properties:
        id:
          type: string
          description: Header signature of batch
          example: 02ced6707de14209d5493b7e021606d76dd759637207818205895bb63c94c6a352
        data_change_id:
          type: string
          description: Third party service id
          example: my_super_cool_batch
        dlt_status:
          type: string
          description: Batch status, either COMMITTED, PENDING, INVALID, OR UNKNOWN
          enum:
            - COMMITTED
            - PENDING
            - INVALID
            - UNKNOWN
    StateChange:
      type: object
      properties:
        "type":
          type: string
          description: |
            The type of state change it was. Either a `SET` or `DELETE` operation
          example: SET
        address:
          type: string
          description: State address
        state:
          type: object
          oneOf:
            - $ref: "#/components/schemas/Agent"
    Receipt:
      type: object
      properties:
        id:
          type: integer
          description: Database identifier for transaction
          example: 1
        family_name:
          description: |
            The family name of the transaction, pike, product, location, and
            schema are the families currently supported.
          type: string
          example: pike
        version:
          description: The smart contract version
          type: string
          example: "1.0"
        signer_public_key:
          type: string
          description: Grid Integration Componentâ€™s public key
          example: "acc079f6de1d5a03a248f71f7b1af4bf44b3f243b6ae20548de4110387051bf75ae8a6694f0b3b1c6284d7c3"
        result_valid:
          type: string
          description: True if transaction is valid and false otherwise
        error_message:
          type: string
          description: Human readable error message if transaction failed to be applied
        error_data:
          type: string
          description: Unstructured data pertaining to error
        external_status:
          type: string
          description: |
            Status indicating if a third party integration service was
            able to apply transaction if applicable
          example: SUCCESS
        external_error_message:
          type: string
          description: Error message from third party service if applicable
